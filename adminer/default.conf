server {
    listen       80;
    listen  [::]:80;
    server_name  localhost;
    index index.php;

    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;
    access_log   off;

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    location @php {
        root /var/www/html;
        fastcgi_split_path_info ^(.+?\.php)(/.*)$;

        # Mitigate https://httpoxy.org/ vulnerabilities
        fastcgi_param HTTP_PROXY "";

        fastcgi_pass adminer:9000;
        fastcgi_index index.php;

        # include the fastcgi_param setting
        include /etc/nginx/fastcgi_params;

        fastcgi_param SCRIPT_FILENAME /var/www/html/index.php;
        fastcgi_param DOCUMENT_ROOT   /var/www/html;
    }

    location ~ ^/(index.php)?$ {
        root /var/www/html;
        try_files $uri $uri/ $uri/index.html $uri/index.htm @php;
    }

    # This block will catch static file requests, such as images, css, js
    # The ?: prefix is a 'non-capturing' mark, meaning we do not require
    # the pattern to be captured into $1 which should help improve performance
    location ~* \.(?:ico|css|js|gif|jpe?g|png|eot|svg|ttf|woff|txt)$ {
        root /var/www/html;
        try_files $uri $uri/ $uri/index.html $uri/index.htm @php;

        # Some basic cache-control for static files to be sent to the browser
        expires max;
        add_header Pragma public;
        add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    }
}